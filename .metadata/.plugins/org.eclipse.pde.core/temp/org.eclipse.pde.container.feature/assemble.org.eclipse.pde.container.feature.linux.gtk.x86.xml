<?xml version="1.0" encoding="UTF-8"?>
<project name="Assemble org.eclipse.pde.container.feature" default="main">
	<property name="archiveName" value="org.eclipse.pde.container.feature-${buildId}-linux.gtk.x86.zip"/>
	<property name="os" value="linux"/>
	<property name="ws" value="gtk"/>
	<property name="arch" value="x86"/>
	<property name="jarProcessor.sign" value="false"/>
	<property name="assemblyTempDir" value="${buildDirectory}/tmp"/>
	<property name="eclipse.base" value="${assemblyTempDir}/${collectingFolder}"/>
	<property name="eclipse.plugins" value="${eclipse.base}/plugins"/>
	<property name="eclipse.features" value="${eclipse.base}/features"/>
	<property name="archiveFullPath" value="${basedir}/${buildLabel}/${archiveName}"/>
	<property name="equinoxLauncherJar" value="/usr/local/eclipse/plugins/org.eclipse.equinox.launcher_1.0.201.R35x_v20090715.jar"/>
	<property name="p2.build.repo" value="file:${buildDirectory}/buildRepo"/>
	<property name="genericTargets" value="${eclipse.pdebuild.scripts}//genericTargets.xml"/>
	<available property="customAssembly" file="${builder}/customAssembly.xml" value="${builder}/customAssembly.xml"/>
	<property name="p2.product.qualifier" value="200912220919"/>
	<property name="launcherName" value="CEP"/>
	<property name="tarargs" value=""/>

	<macrodef name="customGather">
		<attribute name="dir" />
		<attribute name="propertyName" />
		<attribute name="propertyValue" />
		<attribute name="subFolder" />
		<attribute name="projectName" />
		<sequential>
			<ant antfile="build.xml" dir="@{dir}" target="gather.bin.parts">
				<property name="@{propertyName}" value="@{propertyValue}"/>
			</ant>
			<antcall target="customAssembly">
				<param name="target.folder" value="@{propertyValue}@{subFolder}"/>
				<param name="projectLocation" value="${basedir}/@{dir}"/>
				<param name="@{propertyName}" value="@{propertyValue}"/>
				<param name="customTarget" value="gather.bin.parts"/>
				<param name="projectName" value="@{projectName}"/>
			</antcall>
		</sequential>
	</macrodef>

	<!-- Beginning of the jarUp task -->
	<target name="jarUp" description="Create a jar from the given location.">
		<available property="${source}/${elementName}_exists" file="${source}/${elementName}"/>
		<available property="jaringManifest" file="${source}/${elementName}/META-INF/MANIFEST.MF"/>
		<condition property="jaringTask" value="jarIng" else="jarIng_NoManifest"		>
			<isset property="jaringManifest"/>
		</condition>
		<antcall target="${jaringTask}">
			<param name="source" value="${source}"/>
			<param name="elementName" value="${elementName}"/>
		</antcall>
	</target>

	<target name="jarIng" if="${source}/${elementName}_exists">
		<jar destfile="${source}/${elementName}.jar" basedir="${source}/${elementName}" manifest="${source}/${elementName}/META-INF/MANIFEST.MF" filesetmanifest="skip"/>
		<delete dir="${source}/${elementName}"/>
	</target>

	<target name="jarIng_NoManifest" if="${source}/${elementName}_exists">
		<jar destfile="${source}/${elementName}.jar" basedir="${source}/${elementName}" filesetmanifest="merge"/>
		<delete dir="${source}/${elementName}"/>
	</target>
	<!-- End of the jarUp task -->

	<!-- Beginning of the jar signing  target -->
	<target name="jarSigning" description="Sign a jar.">
		<antcall target="customAssembly">
			<param name="customTarget" value="pre.jarSigning"/>
		</antcall>
		<eclipse.jarProcessor sign="${jarProcessor.sign}" pack="${jarProcessor.pack200}" unsign="${jarProcessor.unsign}" jar="${source}/${elementName}.jar" alias="${sign.alias}" keystore="${sign.keystore}" storepass="${sign.storepass}" keypass="${sign.keypass}"/>
	</target>
	<!-- End of the jarUp task -->

	<target name="main">
		<condition property="pluginArchivePrefix" value="plugins">
			<equals arg1="${archivePrefix}"  arg2="" trim="true"/>
		</condition>
		<property name="pluginArchivePrefix" value="${archivePrefix}/plugins"/>

		<condition property="featureArchivePrefix" value="features">
			<equals arg1="${archivePrefix}"  arg2="" trim="true"/>
		</condition>
		<property name="featureArchivePrefix" value="${archivePrefix}/features"/>

		<dirname property="archiveParentFolder" file="${archiveFullPath}"/>
		<mkdir dir="${archiveParentFolder}"/>
		<mkdir dir="${assemblyTempDir}"/>
		<mkdir dir="${buildLabel}"/>

		<antcall target="runDirector"/>
		<antcall target="mirrorProduct"/>
		<antcall target="assemble.archive"/>
		<antcall target="cleanup.assembly"/>
	</target>

	<target name="gather.bin.parts">
		<customGather dir="../../../../../com.e2open.smi.rule.action.addupdateproblem" projectName="com.e2open.smi.rule.action.addupdateproblem_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../com.e2open.smi.rule.action.addupdateslotwithvalue" projectName="com.e2open.smi.rule.action.addupdateslotwithvalue_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../com.e2open.smi.rule.action.builtin" projectName="com.e2open.smi.rule.action.builtin_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../com.e2open.smi.rule.action.changeseverity" projectName="com.e2open.smi.rule.action.changeseverity_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../com.e2open.smi.rule.action.printtostderr" projectName="com.e2open.smi.rule.action.printtostderr_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../com.e2open.smi.rule.action.printtostdout" projectName="com.e2open.smi.rule.action.printtostdout_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../com.e2open.smi.rule.atom" projectName="com.e2open.smi.rule.atom_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../com.e2open.smi.ruleengine" projectName="com.e2open.smi.rule.engine_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../com.e2open.smi.rule.pac.loader" projectName="com.e2open.smi.rule.pac.loader_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../com.e2open.smi.rule.resolver.dnsshortname" projectName="com.e2open.smi.rule.resolver.dnsshortname_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../com.e2open.smi.rule.resolver.formattedcurrentdatetime" projectName="com.e2open.smi.rule.resolver.formattedcurrentdatetime_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../com.e2open.smi.rule.resolver.formattedcurrentdatetimewithparameter" projectName="com.e2open.smi.rule.resolver.formattedcurrentdatetimewithparameter_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../com.e2open.smi.rule.resolver.hostname2hub" projectName="com.e2open.smi.rule.resolver.hostname2hub_1.0.0.200912220919" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../com.e2open.smi.rule.resolver.slot" projectName="com.e2open.smi.rule.resolver.slot_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="../../../../../rcp.ruleengine" projectName="rcp.ruleengine_1.0.0" propertyName="destination.temp.folder" propertyValue="${eclipse.plugins}" subFolder="" />
		<customGather dir="" projectName="org.eclipse.pde.container.feature_1.0" propertyName="feature.base" propertyValue="${eclipse.base}" subFolder="/features" />
	</target>

	<target name="jar.processing">
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.action.addupdateproblem_1.0.0"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.action.addupdateslotwithvalue_1.0.0"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.action.builtin_1.0.0"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.action.changeseverity_1.0.0"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.action.printtostderr_1.0.0"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.action.printtostdout_1.0.0"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.atom_1.0.0"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.engine_1.0.0"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.pac.loader_1.0.0"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.resolver.dnsshortname_1.0.0"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.resolver.formattedcurrentdatetime_1.0.0"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.resolver.formattedcurrentdatetimewithparameter_1.0.0"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.resolver.hostname2hub_1.0.0.200912220919"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="com.e2open.smi.rule.resolver.slot_1.0.0"/>
		</antcall>
		<antcall target="jarUp">
			<param name="source" value="${eclipse.plugins}"/>
			<param name="elementName" value="rcp.ruleengine_1.0.0"/>
		</antcall>
		<antcall target="customAssembly">
			<param name="customTarget" value="post.jarUp"/>
		</antcall>
	</target>

	<target name="assemble.archive.condition">
		<condition property="assemble.archive.condition" value="true"		>
			<or>
				<isset property="runPackager"/>
				<isset property="skipDirector"/>
			</or>
		</condition>
	</target>
	<target name="assemble.archive" depends="assemble.archive.condition" unless="assemble.archive.condition">
		<antcall target="customAssembly">
			<param name="rootFolder" value="${eclipse.base}/linux.gtk.x86/${collectingFolder}"/>
			<param name="customTarget" value="pre.archive"/>
		</antcall>
	</target>

	<target name="cleanup.assembly" unless="runPackager">
	</target>

	<target name="customAssembly" if="customAssembly">
		<ant antfile="${customAssembly}" target="${customTarget}" inheritAll="true"/>
	</target>

	<target name="generate.p2.metadata" if="generate.p2.metadata">
		<property name="p2.append" value="true"/>
		<property name="p2.compress" value="false"/>
		<property name="p2.metadata.repo.name" value=""/>
		<property name="p2.artifact.repo.name" value=""/>
<condition property="p2.generation.mode" value="final" else="incremental"		>
			<and>
				<not>
					<isset property="runPackager"/>
				</not>
				<isset property="p2.final.mode.override"/>
			</and>
		</condition>

		<available property="p2.generation.product.mod" file="${buildDirectory}/features/org.eclipse.pde.build.container.feature/product/cepserver.product" value="${buildDirectory}/features/org.eclipse.pde.build.container.feature/product/cepserver.product"/>
		<property name="p2.generation.product.mod" value="/home/npennell/workspace/galileo/rcp.ruleengine/cepserver.product"/>
		<p2.generator  config="${eclipse.base}/linux.gtk.x86/${collectingFolder}" append="${p2.append}" flavor="${p2.flavor}" compress="${p2.compress}" metadataRepository="${p2.metadata.repo}" artifactRepository="${p2.artifact.repo}" metadataRepositoryName="${p2.metadata.repo.name}" artifactRepositoryName="${p2.artifact.repo.name}" launcherConfig="linux_gtk_x86" p2OS="linux" publishArtifacts="${p2.publish.artifacts}" mode="${p2.generation.mode}" exe="${eclipse.base}/linux.gtk.x86/${collectingFolder}/${launcherName}" productFile="${p2.generation.product.mod}"		/>
	</target>

	<target name="runDirector.condition">
		<condition property="runDirector.condition" value="true"		>
			<or>
				<isset property="runPackager"/>
				<isset property="skipDirector"/>
			</or>
		</condition>
	</target>
	<target name="runDirector" depends="runDirector.condition" unless="runDirector.condition">
		<ant antfile="${genericTargets}" target="runDirector" inheritAll="true">
			<property name="p2.director.installPath" value="${eclipse.base}"/>
			<property name="os" value="${os}"/>
			<property name="p2.director.version" value="1.0.0"/>
			<property name="arch" value="${arch}"/>
			<property name="p2.director.iu" value="ruleengine"/>
			<property name="ws" value="${ws}"/>
			<property name="p2.repo" value="${p2.build.repo}"/>
		</ant>

	</target>

	<target name="mirrorArchive" unless="skipMirroring">
		<property name="p2.append" value="true"/>
		<property name="p2.mirror.metadata.destination" value="file:${eclipse.base}"/>
		<property name="p2.mirror.artifact.destination" value="file:${eclipse.base}"/>
		<p2.mirror  source="${p2.build.repo}"		>
			<destination  location="${p2.mirror.metadata.destination}" name="${p2.metadata.repo.name}" compressed="${p2.compress}" append="${p2.append}" kind="metadata"		/>
			<destination  location="${p2.mirror.artifact.destination}" name="${p2.artifact.repo.name}" compressed="${p2.compress}" append="${p2.append}" kind="artifact"		/>
					<iu  id="com.e2open.smi.rule.action.addupdateproblem" version="1.0.0"		/>
			<iu  id="com.e2open.smi.rule.action.addupdateslotwithvalue" version="1.0.0"		/>
			<iu  id="com.e2open.smi.rule.action.builtin" version="1.0.0"		/>
			<iu  id="com.e2open.smi.rule.action.changeseverity" version="1.0.0"		/>
			<iu  id="com.e2open.smi.rule.action.printtostderr" version="1.0.0"		/>
			<iu  id="com.e2open.smi.rule.action.printtostdout" version="1.0.0"		/>
			<iu  id="com.e2open.smi.rule.atom" version="1.0.0"		/>
			<iu  id="com.e2open.smi.rule.engine" version="1.0.0"		/>
			<iu  id="com.e2open.smi.rule.pac.loader" version="1.0.0"		/>
			<iu  id="com.e2open.smi.rule.resolver.dnsshortname" version="1.0.0"		/>
			<iu  id="com.e2open.smi.rule.resolver.formattedcurrentdatetime" version="1.0.0"		/>
			<iu  id="com.e2open.smi.rule.resolver.formattedcurrentdatetimewithparameter" version="1.0.0"		/>
			<iu  id="com.e2open.smi.rule.resolver.hostname2hub" version="1.0.0.200912220919"		/>
			<iu  id="com.e2open.smi.rule.resolver.slot" version="1.0.0"		/>
			<iu  id="rcp.ruleengine" version="1.0.0"		/>
			<iu id="ruleengine" version="1.0.0"		/>
				<iu query="property[@name='org.eclipse.equinox.p2.type.category']" required="false" />
		</p2.mirror>
	</target>

	<target name="mirrorProduct" if="p2.metadata.repo" unless="skipMirroring">
		<antcall target="mirrorArchive">
			<param name="p2.mirror.artifact.destination" value="${p2.artifact.repo}"/>
			<param name="p2.mirror.metadata.destination" value="${p2.metadata.repo}"/>
		</antcall>
	</target>

</project>
